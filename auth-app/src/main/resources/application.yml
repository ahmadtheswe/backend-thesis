server:
  port: 9091
spring:
  r2dbc:
    url: 'r2dbc:postgresql://postgres@localhost:5445/auth'
    password: 'postgres'
  h2:
    console:
      enabled: true
  main:
    allow-bean-definition-overriding: true
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: ${CLIENT_ID}
            client-secret: ${CLIENT_SECRET}
            authorization-grant-type: authorization_code
            scope:
              - openid
        provider:
          keycloak:
            authorization-uri: http://localhost:28080/realms/${REALM_NAME}/protocol/openid-connect/auth
            token-uri: http://localhost:28080/realms/${REALM_NAME}/protocol/openid-connect/token
            user-info-uri: http://localhost:28080/realms/${REALM_NAME}/protocol/openid-connect/userinfo
            jwk-set-uri: http://localhost:28080/realms/${REALM_NAME}/protocol/openid-connect/certs
            issuer-uri: http://localhost:28080/realms/${REALM_NAME}
            user-name-attribute: preferred_username
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:28080/realms/${REALM_NAME}/protocol/openid-connect/certs
logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    org.springframework.boot.autoconfigure.security: DEBUG
    org.springframework.boot.autoconfigure.security.oauth2: DEBUG

keycloak-admin:
  server-url: http://localhost:28080
  realm: ${REALM_NAME}
  admin-client-id: ${ADMIN_CLIENT_ID}
  admin-client-secret: ${ADMIN_CLIENT_SECRET}
  client-id: ${CLIENT_ID}
  client-secret: ${CLIENT_SECRET}

email:
  sender-address: ${AUTH_EMAIL}
  sender-password: ${AUTH_PASS}

api:
  payment:
    get-subscription-level: 'http://localhost:9093/payment'

allowed:
  api:
    domain:
      list :
        - 'localhost://9093'
        - 'localhost:28080'
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.2'
	id 'org.flywaydb.flyway' version "${flywayVersion}"
	id 'jacoco'
}

group = 'com.ahmad-thesis'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'io.r2dbc:r2dbc-postgresql:0.8.13.RELEASE'
	runtimeOnly 'org.postgresql:postgresql'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	testLogging {
		events "passed", "failed", "skipped"
	}
	finalizedBy jacocoTestReport // report is always generated after tests run
}

jacoco {
	toolVersion = "0.8.9"
//    reportsDirectory = layout.buildDirectory.dir('jacocoCsv')
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
	reports {
		xml.required = false
		csv.required = true
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}

}

flyway {
	url = "jdbc:postgresql://$flywayHost:$flywayPort/$flywayDatabase"
	user = flywayUsername
	password = flywayPassword
	locations = ["filesystem:src/main/resources/db/migration"]
}
